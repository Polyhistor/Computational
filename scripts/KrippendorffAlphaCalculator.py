import numpy as np
import krippendorff

# Before Delphi
# data = np.array([
#     [0,1,0,0,1,0,0,0,1,1,0,1,0,0,0,0,0,0,1,0,0,1,0,1,1,1,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,0,0,0],
#     [1,1,0,0,1,0,1,0,1,1,0,1,1,1,0,0,0,0,1,0,1,1,1,1,1,1,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,0,1,1,0,1],
#     [1,1,1,0,1,0,0,0,1,1,0,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,0,1,1,1,1,1,0,0],
#     [0,0,1,0,0,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
#     [1,1,0,0,1,0,0,0,1,1,0,1,0,1,0,0,0,0,1,0,0,0,0,1,1,1,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,0,0,0]
# ])

# Delphi 
data = np.array([
    [0,1,0,0,1,0,1,1,1,0,0,0,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1],
    [1,0,1,0,0,0,1,1,1,0,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,1,0],
    [1,0,1,0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,1,1,0,1,0,1,0],
    [1,1,1,0,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,1,1,0,1,0,1,0,1,0],
    [0,0,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1,1,0,1,0,1,0]
])

# Calculate Krippendorff's alpha
alpha = krippendorff.alpha(reliability_data=data, level_of_measurement='nominal')

print(f"Krippendorff's alpha: {alpha:.6f}")